🚀 Intelligent AI Workflows with LangChain + Gemini

This repo explores how to move beyond “toy chatbots” and build intelligent, context-aware AI workflows using LangChain Memories and Chains, powered by Gemini.

I experimented with multiple memory types and chain architectures to show how structured memory + multi-step reasoning make AI apps more interactive and useful in real-world workflows.

🧠 Memories Implemented (Langchain_memory.ipynb)

BufferMemory → Full-context customer support chats

BufferWindowMemory → Lightweight FAQ bot (last 3 messages only)

TokenBufferMemory → Summarization bot without hitting token/context limits

SummaryMemory → Assistant that turns long conversations into recap notes

🔗 Chains Built (L3_chains.ipynb)

LLMChain → Resume → Professional Summary

SimpleSequentialChain → Topic → Outline → Blog Post

SequentialChain → Resume + Job Desc → Tailored Cover Letter

RouterChain → Auto-route customer queries to the right department

📂 Repository Structure
├── Langchain_memory.ipynb     # Experiments with Buffer, Window, Token, and Summary memory
├── L3_chains.ipynb            # Demos of LLMChain, SequentialChains, RouterChain
├── requirements.txt           # Dependencies
└── README.md                  # Project overview

⚡ Getting Started
1️⃣ Clone the repo
git clone https://github.com/Sharanappabadni/intelligent-ai-workflows.git
cd intelligent-ai-workflows

2️⃣ Install dependencies
pip install -r requirements.txt

3️⃣ Set up API keys

Create a .env file in the project root and add your keys:

GOOGLE_API_KEY=your_gemini_api_key
OPENAI_API_KEY=your_openai_api_key

4️⃣ Run the notebooks

Launch Jupyter Notebook or Jupyter Lab:

jupyter notebook


Open Langchain_memory.ipynb or L3_chains.ipynb to explore the experiments.

🎯 Key Takeaways

BufferMemory vs WindowMemory → full vs partial context handling

TokenBufferMemory → smart way to manage context limits

SummaryMemory → efficient long conversation management

Chains turn simple prompts into multi-step intelligent workflows

🌟 Example Use Cases

Customer support chatbot with memory of past interactions

AI blog writer (Topic → Outline → Blog Post)

Resume + JD → Tailored Cover Letter Generator

Smart router for customer queries

📌 Roadmap

 Add LangGraph visual workflows

 Integrate vector stores (Weaviate, Pinecone, FAISS)

 Expand agentic workflows with tools

🤝 Contributing

Contributions welcome! Feel free to fork, open issues, or submit PRs.
